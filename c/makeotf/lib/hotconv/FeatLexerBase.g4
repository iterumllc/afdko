lexer grammar FeatLexerBase;

COMMENT		: '#' ~[\r\n]* -> skip ;
WHITESPACE	: [ \t\r\n]+ -> skip ;
BY		: 'by' ;
FROM		: 'from' ;
FEATURE		: 'feature' ;
SUB		: 'substitute' ;
SUBV		: 'sub' ;
EXCEPT : 'except' ;
ANCHORDEF : 'anchorDef' ;
ANCHOR : 'anchor' ;
CONTOURPOINT : 'contourpoint' ;
REV		: 'reversesub' ;
REVV	: 'rsub' ;
MARKCLASS : 'markClass' ;
LANGSYS : 'languagesystem' ;
BASE    : 'BASE' ;
TABLE   : 'table' ;
ANON    : 'anon' ;
ANONV   : 'anonymous' ;
SCRIPT  : 'script' ;
LANG  : 'language' ;
GDEF  : 'GDEF' ;
GCD   : 'GlyphClassDef' ;
ATTACH : 'Attach' ;
HEAD : 'head' ;
FONTREV : 'FontRevision' ;
HHEA : 'hhea' ;
CARETOFF : 'CaretOffset' ;
ASCENDER : 'Ascender' ;
DESCENDER : 'Descender' ;
LINEGAP : 'LineGap' ;
VHEA : 'vhea' ;
VASCENDER : 'VertTypoAscender' ;
VDESCENDER : 'VertTypoDescender' ;
VLINEGAP : 'VertTypoLineGap' ;
VMTX : 'vmtx' ;
VERTORIY : 'VertOriginY' ;
VERTADVY : 'VertAdvanceY' ;
NAME : 'name' ;
NAMEID : 'nameid' ;
LIGCARETPOS : 'LigatureCaretByPos' ;
LIGCARETIDX : 'LigatureCaretByIndex' ;
STAT    : 'STAT' ;
ELIDFALLNAME : 'ElidedFallbackName' ;
ELIDFALLNAMEID : 'ElidedFallbackNameID' ;
DESIGNAXIS : 'DesignAxis' ;
AXISVALUE : 'AxisValue';
FLAG : 'flag' ;
AXIS_OSFA : 'OlderSiblingFontAttribute';
AXIS_EAVN : 'ElidableAxisValueName';
LOCATION : 'location';
OS_2 : 'OS/2' ;
FSTYPE : 'FSType' ;
FSTYPE2 : 'fsType' ;
OS2_LOPS : 'LowerOpSize' ;
OS2_UOPS : 'UpperOpSize' ;
PANOSE : 'Panose' ;
TYPOASC : 'TypoAscender' ;
TYPODESC : 'TypoDescender' ;
TYPOLINEGAP : 'TypoLineGap' ;
WINASC : 'winAscent' ;
WINDESC : 'winDescent' ;
XHEIGHT : 'XHeight' ;
CAPHEIGHT : 'CapHeight' ;
WEIGHTCLASS : 'WeightClass' ;
WIDTHCLASS : 'WidthClass' ;
VENDOR : 'Vendor' ;
UNIRANGE : 'UnicodeRange' ;
CODEPAGERANGE : 'CodePageRange' ;
FAMCLASS : 'FamilyClass' ;
LOOKUP : 'lookup' ;
USEEXTENSION : 'useExtension' ;
EXCLUDE_DFLT : 'excludeDFLT' ;
INCLUDE_DFLT : 'includeDFLT' ;
EXCLUDE_dflt : 'exclude_dflt' ;
INCLUDE_dflt : 'include_dflt' ;
HA_BTL      : 'HorizAxis.BaseTagList' ;
VA_BTL      : 'VertAxis.BaseTagList' ;
HA_BSL      : 'HorizAxis.BaseScriptList' ;
VA_BSL      : 'VertAxis.BaseScriptList' ;
SUBTABLE    : 'subtable';
LOOKUPFLAG : 'lookupflag' ;
VALUERECORDDEF : 'valueRecordDef' ;
BEGINVALUE : '<' ;
ENDVALUE : '>' ;
FEATNAMES : 'featureNames' ;
LOOKUPFLAG : 'lookupflag' ;
RIGHTTOLEFT : 'RightToLeft' ;
IGNOREBASEGLYPHS : 'IgnoreBaseGlyphs' ;
IGNORELIGATURES : 'IgnoreLigatures' ;
IGNOREMARKS : 'IgnoreMarks' ;
MARKATTACHMENTTYPE : 'MarkAttachmentType' ;
USEMARKFILTERINGSET : 'UseMarkFilteringSet' ;
SIZEMENUNAME : 'sizemenuname' ;
CVPARAMETERS : 'cvParameters' ;
CVUILABEL : 'FeatUILabelNameID' ;
CVTOOLTIP : 'FeatUITooltipTextNameID' ;
CVSAMPLETEXT : 'SampleTextNameID' ;
CVPARAMLABEL : 'ParamUILabelNameID' ;
CVCHARACTER : 'Character' ;
PARAMETERS : 'parameters' ;
IGNORE : 'ignore' ;
ENUM : 'enumerate' ;
ENUMV : 'enum' ;
POSITION : 'position' ; 
POSITIONV : 'pos';
CURSIVE : 'cursive' ;
MARKBASE : 'base' ;
MARKLIG : 'ligature' ;
MARKLIGV : 'lig' ;
MARK : 'mark';
LIGATURECOMPONENT : 'ligComponent' ;
KNULL   : 'NULL' ;
INCLUDE		: 'include' -> pushMode(Include) ;
LCBRACE		: '{' ;
RCBRACE		: '}' ;
LBRACKET    : '[' ;
RBRACKET    : ']' ;
HYPHEN      : '-' ;
SEMI		: ';' ;
EQUALS      : '=' ;
MARKER      : '\'' ;
COMMA       : ',' ;
QUOTE       : '"' -> pushMode(String) ;
fragment GNST	: 'A' .. 'Z' | 'a' .. 'z' | '_' | '.' ;
fragment GCCHR	: GNST | '0' .. '9' ; // removed hyphen from source
GCLASS		: '@' GCCHR+ ;
CID         : '\\' ( '0' .. '9' )+ ;
fragment GNCHR	: GCCHR | '-' | '+' | '*' | ':' | '~' | '^' | '|' ; // XXX change from source
ESCGNAME	: '\\' GNST GNCHR* ;
NAMELABEL	: GNST GCCHR* ;
EXTNAME		: GNST GNCHR* ;
POINTNUM    : '-'? ( '0' .. '9' )+ '.' ( '0' .. '9' )+ ;
NUMEXT      : '0x' ( '0' .. '9' | 'a' .. 'f' | 'A' .. 'F' )+ ;
NUMOCT      : '0' ( '0' .. '7' )+ ;
NUM         : '-'? ( '1' .. '9' ( '0' .. '9' )* | '0' ) ;
fragment TSTART : '!' | '$' | '%' | '&' | '*' | '+' | '.' | ':' | '?' | 'A' .. 'Z' | '^' .. 'z' | '|' | '~' ; // XXX change from source
fragment TCHR : TSTART | '0' .. '9' ;
CATCHTAG	: TSTART+ ;

mode Include;

I_WHITESPACE	: [ \t\r\n]+ -> skip ;
I_RPAREN	: '(' -> mode(Ifile) ;

mode Ifile;

IFILE		: ~')'+ ;
I_LPAREN	: ')' -> popMode ;

mode String;

STRVAL      : ~'"'* ;
EQUOTE      : '"' -> popMode ;
